# Import necessary libraries
import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error
import joblib  # Used for saving the model

# Load the dataset (replace 'your_dataset.csv' with the actual file path)
dataset = pd.read_csv('your_dataset.csv')

# Preprocess the data
# Assuming you want to fill missing values with mean and one-hot encode categorical variables
dataset.fillna(dataset.mean(), inplace=True)
dataset = pd.get_dummies(dataset)

# Split the dataset into features (X) and target variable (y)
X = dataset.drop('target_variable_column_name', axis=1)  # Adjust 'target_variable_column_name'
y = dataset['target_variable_column_name']

# Split the dataset into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Create a Linear Regression model and train it
model = LinearRegression()
model.fit(X_train, y_train)

# Evaluate the model's performance
y_pred = model.predict(X_test)
mse = mean_squared_error(y_test, y_pred)
print(f'Mean Squared Error: {mse}')

# Save the trained model for future predictions
joblib.dump(model, 'linear_regression_model.joblib')